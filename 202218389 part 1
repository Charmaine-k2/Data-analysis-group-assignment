{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e6779d70-8fed-47ff-a8f8-bcf0611b1c8d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Admin\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d6208e90-4d0d-476b-91fd-17f99b51dc62",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "6725f769-a50d-418f-840e-150500ed5263",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Load datasets\n",
    "poverty = pd.read_csv(\"Poverty and Inequality Platform.csv\")\n",
    "Learning=pd.read_csv(\"Learning_poverty.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b588300d-c83b-48f2-bea4-32214e6c7052",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       STRUCTURE                STRUCTURE_ID ACTION FREQ FREQ_LABEL REF_AREA  \\\n",
      "0  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AGO   \n",
      "1  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AGO   \n",
      "2  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AGO   \n",
      "3  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      ALB   \n",
      "4  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      ALB   \n",
      "\n",
      "  REF_AREA_LABEL             INDICATOR  \\\n",
      "0         Angola  WB_PIP_HEADCOUNT_IPL   \n",
      "1         Angola  WB_PIP_HEADCOUNT_IPL   \n",
      "2         Angola  WB_PIP_HEADCOUNT_IPL   \n",
      "3        Albania  WB_PIP_HEADCOUNT_IPL   \n",
      "4        Albania  WB_PIP_HEADCOUNT_IPL   \n",
      "\n",
      "                                     INDICATOR_LABEL SEX  ... UNIT_MULT_LABEL  \\\n",
      "0  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "1  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "2  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "3  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "4  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "\n",
      "  UNIT_TYPE UNIT_TYPE_LABEL TIME_FORMAT TIME_FORMAT_LABEL COMMENT_OBS  \\\n",
      "0     RATIO           Ratio         602              CCYY         NaN   \n",
      "1     RATIO           Ratio         602              CCYY         NaN   \n",
      "2     RATIO           Ratio         602              CCYY         NaN   \n",
      "3     RATIO           Ratio         602              CCYY         NaN   \n",
      "4     RATIO           Ratio         602              CCYY         NaN   \n",
      "\n",
      "  OBS_STATUS OBS_STATUS_LABEL OBS_CONF OBS_CONF_LABEL  \n",
      "0          A     Normal value       PU         Public  \n",
      "1          A     Normal value       PU         Public  \n",
      "2          A     Normal value       PU         Public  \n",
      "3          A     Normal value       PU         Public  \n",
      "4          A     Normal value       PU         Public  \n",
      "\n",
      "[5 rows x 38 columns]\n",
      "       STRUCTURE                STRUCTURE_ID ACTION FREQ FREQ_LABEL REF_AREA  \\\n",
      "0  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "1  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "2  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "3  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "4  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      ALB   \n",
      "\n",
      "  REF_AREA_LABEL           INDICATOR                     INDICATOR_LABEL SEX  \\\n",
      "0    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "1    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "2    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "3    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "4        Albania  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "\n",
      "   ... UNIT_MULT UNIT_MULT_LABEL UNIT_TYPE  UNIT_TYPE_LABEL TIME_FORMAT  \\\n",
      "0  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "1  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "2  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "3  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "4  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "\n",
      "  TIME_FORMAT_LABEL OBS_STATUS OBS_STATUS_LABEL OBS_CONF OBS_CONF_LABEL  \n",
      "0              CCYY          A     Normal value       PU         Public  \n",
      "1              CCYY          A     Normal value       PU         Public  \n",
      "2              CCYY          A     Normal value       PU         Public  \n",
      "3              CCYY          A     Normal value       PU         Public  \n",
      "4              CCYY          A     Normal value       PU         Public  \n",
      "\n",
      "[5 rows x 37 columns]\n"
     ]
    }
   ],
   "source": [
    "#check missing values\n",
    "print(poverty.head())\n",
    "print(Learning.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a354dbf7-c7bc-4ed2-be88-17054dac0fbc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "STRUCTURE                     0\n",
      "STRUCTURE_ID                  0\n",
      "ACTION                        0\n",
      "FREQ                          0\n",
      "FREQ_LABEL                    0\n",
      "REF_AREA                      0\n",
      "REF_AREA_LABEL                0\n",
      "INDICATOR                     0\n",
      "INDICATOR_LABEL               0\n",
      "SEX                           0\n",
      "SEX_LABEL                     0\n",
      "AGE                           0\n",
      "AGE_LABEL                     0\n",
      "URBANISATION                  0\n",
      "URBANISATION_LABEL            0\n",
      "UNIT_MEASURE                  0\n",
      "UNIT_MEASURE_LABEL            0\n",
      "COMP_BREAKDOWN_1              0\n",
      "COMP_BREAKDOWN_1_LABEL        0\n",
      "COMP_BREAKDOWN_2              0\n",
      "COMP_BREAKDOWN_2_LABEL        0\n",
      "COMP_BREAKDOWN_3              0\n",
      "COMP_BREAKDOWN_3_LABEL        0\n",
      "TIME_PERIOD                   0\n",
      "OBS_VALUE                     0\n",
      "DATABASE_ID                   0\n",
      "DATABASE_ID_LABEL             0\n",
      "UNIT_MULT                     0\n",
      "UNIT_MULT_LABEL               0\n",
      "UNIT_TYPE                     0\n",
      "UNIT_TYPE_LABEL               0\n",
      "TIME_FORMAT                   0\n",
      "TIME_FORMAT_LABEL             0\n",
      "COMMENT_OBS               29973\n",
      "OBS_STATUS                    0\n",
      "OBS_STATUS_LABEL              0\n",
      "OBS_CONF                      0\n",
      "OBS_CONF_LABEL                0\n",
      "dtype: int64\n",
      "STRUCTURE                 0\n",
      "STRUCTURE_ID              0\n",
      "ACTION                    0\n",
      "FREQ                      0\n",
      "FREQ_LABEL                0\n",
      "REF_AREA                  0\n",
      "REF_AREA_LABEL            0\n",
      "INDICATOR                 0\n",
      "INDICATOR_LABEL           0\n",
      "SEX                       0\n",
      "SEX_LABEL                 0\n",
      "AGE                       0\n",
      "AGE_LABEL                 0\n",
      "URBANISATION              0\n",
      "URBANISATION_LABEL        0\n",
      "UNIT_MEASURE              0\n",
      "UNIT_MEASURE_LABEL        0\n",
      "COMP_BREAKDOWN_1          0\n",
      "COMP_BREAKDOWN_1_LABEL    0\n",
      "COMP_BREAKDOWN_2          0\n",
      "COMP_BREAKDOWN_2_LABEL    0\n",
      "COMP_BREAKDOWN_3          0\n",
      "COMP_BREAKDOWN_3_LABEL    0\n",
      "TIME_PERIOD               0\n",
      "OBS_VALUE                 0\n",
      "DATABASE_ID               0\n",
      "DATABASE_ID_LABEL         0\n",
      "UNIT_MULT                 0\n",
      "UNIT_MULT_LABEL           0\n",
      "UNIT_TYPE                 0\n",
      "UNIT_TYPE_LABEL           0\n",
      "TIME_FORMAT               0\n",
      "TIME_FORMAT_LABEL         0\n",
      "OBS_STATUS                0\n",
      "OBS_STATUS_LABEL          0\n",
      "OBS_CONF                  0\n",
      "OBS_CONF_LABEL            0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#  missing values\n",
    "print(poverty.isnull().sum())\n",
    "print(Learning.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "59612501-03f0-4653-b52b-0df4af58e81f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#cleaning data\n",
    "poverty.drop_duplicates(inplace=True)\n",
    "Learning.drop_duplicates(inplace=True)\n",
    "\n",
    "poverty.rename(columns={\"Time\": \"year\"}, inplace=True)\n",
    "Learning.rename(columns={\"Time\": \"year\"}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "7a9bd2cb-a918-43fd-aaad-e907c3410aa9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA',\n",
      "       'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL',\n",
      "       'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL',\n",
      "       'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1',\n",
      "       'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL',\n",
      "       'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD',\n",
      "       'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT',\n",
      "       'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT',\n",
      "       'TIME_FORMAT_LABEL', 'COMMENT_OBS', 'OBS_STATUS', 'OBS_STATUS_LABEL',\n",
      "       'OBS_CONF', 'OBS_CONF_LABEL'],\n",
      "      dtype='object')\n",
      "       STRUCTURE                STRUCTURE_ID ACTION FREQ FREQ_LABEL REF_AREA  \\\n",
      "0  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AGO   \n",
      "1  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AGO   \n",
      "2  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AGO   \n",
      "3  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      ALB   \n",
      "4  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      ALB   \n",
      "\n",
      "  REF_AREA_LABEL             INDICATOR  \\\n",
      "0         Angola  WB_PIP_HEADCOUNT_IPL   \n",
      "1         Angola  WB_PIP_HEADCOUNT_IPL   \n",
      "2         Angola  WB_PIP_HEADCOUNT_IPL   \n",
      "3        Albania  WB_PIP_HEADCOUNT_IPL   \n",
      "4        Albania  WB_PIP_HEADCOUNT_IPL   \n",
      "\n",
      "                                     INDICATOR_LABEL SEX  ... UNIT_MULT_LABEL  \\\n",
      "0  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "1  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "2  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "3  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "4  Poverty headcount ratio (2017 PPP, $2.15) (% o...  _T  ...           Units   \n",
      "\n",
      "  UNIT_TYPE UNIT_TYPE_LABEL TIME_FORMAT TIME_FORMAT_LABEL COMMENT_OBS  \\\n",
      "0     RATIO           Ratio         602              CCYY         NaN   \n",
      "1     RATIO           Ratio         602              CCYY         NaN   \n",
      "2     RATIO           Ratio         602              CCYY         NaN   \n",
      "3     RATIO           Ratio         602              CCYY         NaN   \n",
      "4     RATIO           Ratio         602              CCYY         NaN   \n",
      "\n",
      "  OBS_STATUS OBS_STATUS_LABEL OBS_CONF OBS_CONF_LABEL  \n",
      "0          A     Normal value       PU         Public  \n",
      "1          A     Normal value       PU         Public  \n",
      "2          A     Normal value       PU         Public  \n",
      "3          A     Normal value       PU         Public  \n",
      "4          A     Normal value       PU         Public  \n",
      "\n",
      "[5 rows x 38 columns]\n",
      "Index(['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA',\n",
      "       'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL',\n",
      "       'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL',\n",
      "       'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1',\n",
      "       'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL',\n",
      "       'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD',\n",
      "       'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT',\n",
      "       'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT',\n",
      "       'TIME_FORMAT_LABEL', 'OBS_STATUS', 'OBS_STATUS_LABEL', 'OBS_CONF',\n",
      "       'OBS_CONF_LABEL'],\n",
      "      dtype='object')\n",
      "       STRUCTURE                STRUCTURE_ID ACTION FREQ FREQ_LABEL REF_AREA  \\\n",
      "0  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "1  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "2  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "3  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      AFG   \n",
      "4  datastructure  WB.DATA360:DS_DATA360(1.2)      I    A     Annual      ALB   \n",
      "\n",
      "  REF_AREA_LABEL           INDICATOR                     INDICATOR_LABEL SEX  \\\n",
      "0    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "1    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "2    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "3    Afghanistan  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "4        Albania  WB_LPGD_SE_LPV_POP  Population for Reference Year 2019  _T   \n",
      "\n",
      "   ... UNIT_MULT UNIT_MULT_LABEL UNIT_TYPE  UNIT_TYPE_LABEL TIME_FORMAT  \\\n",
      "0  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "1  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "2  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "3  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "4  ...         0           Units     COUNT  Count (Integer)         602   \n",
      "\n",
      "  TIME_FORMAT_LABEL OBS_STATUS OBS_STATUS_LABEL OBS_CONF OBS_CONF_LABEL  \n",
      "0              CCYY          A     Normal value       PU         Public  \n",
      "1              CCYY          A     Normal value       PU         Public  \n",
      "2              CCYY          A     Normal value       PU         Public  \n",
      "3              CCYY          A     Normal value       PU         Public  \n",
      "4              CCYY          A     Normal value       PU         Public  \n",
      "\n",
      "[5 rows x 37 columns]\n"
     ]
    }
   ],
   "source": [
    "#inspecting data\n",
    "print(poverty.columns)\n",
    "print(poverty.head())\n",
    "\n",
    "print(Learning.columns)\n",
    "print(Learning.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "cfecdda7-3464-4512-83ce-3689211f479a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA', 'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL', 'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL', 'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1', 'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL', 'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD', 'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT', 'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT', 'TIME_FORMAT_LABEL', 'COMMENT_OBS', 'OBS_STATUS', 'OBS_STATUS_LABEL', 'OBS_CONF', 'OBS_CONF_LABEL']\n",
      "['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA', 'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL', 'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL', 'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1', 'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL', 'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD', 'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT', 'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT', 'TIME_FORMAT_LABEL', 'OBS_STATUS', 'OBS_STATUS_LABEL', 'OBS_CONF', 'OBS_CONF_LABEL']\n"
     ]
    }
   ],
   "source": [
    "#run\n",
    "print(poverty.columns.tolist())\n",
    "print(Learning.columns.tolist())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "8806a64c-6230-4220-931b-59afe71b3729",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA',\n",
      "       'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL',\n",
      "       'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL',\n",
      "       'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1',\n",
      "       'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL',\n",
      "       'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD',\n",
      "       'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT',\n",
      "       'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT',\n",
      "       'TIME_FORMAT_LABEL', 'COMMENT_OBS', 'OBS_STATUS', 'OBS_STATUS_LABEL',\n",
      "       'OBS_CONF', 'OBS_CONF_LABEL'],\n",
      "      dtype='object')\n",
      "Index(['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA',\n",
      "       'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL',\n",
      "       'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL',\n",
      "       'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1',\n",
      "       'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL',\n",
      "       'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD',\n",
      "       'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT',\n",
      "       'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT',\n",
      "       'TIME_FORMAT_LABEL', 'OBS_STATUS', 'OBS_STATUS_LABEL', 'OBS_CONF',\n",
      "       'OBS_CONF_LABEL'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "#check column names\n",
    "\n",
    "print(poverty.columns)\n",
    "print(Learning.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "a17cecde-630c-4ace-add8-6e0cdcf17a67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "poverty columns after rename: Index(['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA',\n",
      "       'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL',\n",
      "       'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL',\n",
      "       'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1',\n",
      "       'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL',\n",
      "       'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD',\n",
      "       'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT',\n",
      "       'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT',\n",
      "       'TIME_FORMAT_LABEL', 'COMMENT_OBS', 'OBS_STATUS', 'OBS_STATUS_LABEL',\n",
      "       'OBS_CONF', 'OBS_CONF_LABEL'],\n",
      "      dtype='object')\n",
      "Learning columns after rename: Index(['STRUCTURE', 'STRUCTURE_ID', 'ACTION', 'FREQ', 'FREQ_LABEL', 'REF_AREA',\n",
      "       'REF_AREA_LABEL', 'INDICATOR', 'INDICATOR_LABEL', 'SEX', 'SEX_LABEL',\n",
      "       'AGE', 'AGE_LABEL', 'URBANISATION', 'URBANISATION_LABEL',\n",
      "       'UNIT_MEASURE', 'UNIT_MEASURE_LABEL', 'COMP_BREAKDOWN_1',\n",
      "       'COMP_BREAKDOWN_1_LABEL', 'COMP_BREAKDOWN_2', 'COMP_BREAKDOWN_2_LABEL',\n",
      "       'COMP_BREAKDOWN_3', 'COMP_BREAKDOWN_3_LABEL', 'TIME_PERIOD',\n",
      "       'OBS_VALUE', 'DATABASE_ID', 'DATABASE_ID_LABEL', 'UNIT_MULT',\n",
      "       'UNIT_MULT_LABEL', 'UNIT_TYPE', 'UNIT_TYPE_LABEL', 'TIME_FORMAT',\n",
      "       'TIME_FORMAT_LABEL', 'OBS_STATUS', 'OBS_STATUS_LABEL', 'OBS_CONF',\n",
      "       'OBS_CONF_LABEL'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "#rename\n",
    "poverty.rename(columns={\"poverty columns\": \"year\"}, inplace=True)\n",
    "Learning.rename(columns={\"Learning columns\":\"year\"}, inplace=True)\n",
    "\n",
    "#verify renaming\n",
    "\n",
    "print(\"poverty columns after rename:\", poverty.columns)\n",
    "print(\"Learning columns after rename:\",Learning.columns)\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "852e0577-8893-46c1-8c64-215b15082353",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'columns after rename'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_6080\\3975423417.py\u001b[0m in \u001b[0;36m?\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m#merge datasets\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mmerged\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmerge\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpoverty\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mLearning\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mon\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"columns after rename\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mhow\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"inner\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmerged\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)\u001b[0m\n\u001b[0;32m    166\u001b[0m             \u001b[0mvalidate\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mvalidate\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    167\u001b[0m             \u001b[0mcopy\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    168\u001b[0m         \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    169\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 170\u001b[1;33m         op = _MergeOperation(\n\u001b[0m\u001b[0;32m    171\u001b[0m             \u001b[0mleft_df\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    172\u001b[0m             \u001b[0mright_df\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    173\u001b[0m             \u001b[0mhow\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mhow\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(self, left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, indicator, validate)\u001b[0m\n\u001b[0;32m    790\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mright_join_keys\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    791\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mjoin_names\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    792\u001b[0m             \u001b[0mleft_drop\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    793\u001b[0m             \u001b[0mright_drop\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 794\u001b[1;33m         \u001b[1;33m)\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_merge_keys\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    795\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    796\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mleft_drop\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    797\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mleft\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mleft\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_drop_labels_or_levels\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mleft_drop\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m   1293\u001b[0m                         \u001b[1;31m# Then we're either Hashable or a wrong-length arraylike,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1294\u001b[0m                         \u001b[1;31m#  the latter of which will raise\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1295\u001b[0m                         \u001b[0mrk\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcast\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mHashable\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrk\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1296\u001b[0m                         \u001b[1;32mif\u001b[0m \u001b[0mrk\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1297\u001b[1;33m                             \u001b[0mright_keys\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mright\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_label_or_level_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrk\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1298\u001b[0m                         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1299\u001b[0m                             \u001b[1;31m# work-around for merge_asof(right_index=True)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1300\u001b[0m                             \u001b[0mright_keys\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mright\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36m?\u001b[1;34m(self, key, axis)\u001b[0m\n\u001b[0;32m   1907\u001b[0m             \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mxs\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mother_axes\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1908\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_is_level_reference\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1909\u001b[0m             \u001b[0mvalues\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_level_values\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1910\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1911\u001b[1;33m             \u001b[1;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1912\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1913\u001b[0m         \u001b[1;31m# Check for duplicates\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1914\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mvalues\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'columns after rename'"
     ]
    }
   ],
   "source": [
    "#merge datasets\n",
    "\n",
    "merged = pd.merge(poverty,Learning, on=\"year\", how=\"inner\")\n",
    "print(merged.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "25d6985b-45f5-43a6-a4ac-b44b46a10190",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'merged' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[113], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#Descrptive stats\u001b[39;00m\n\u001b[1;32m----> 3\u001b[0m desc_stats\u001b[38;5;241m=\u001b[39mmerged\u001b[38;5;241m.\u001b[39mdescribe()\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(desc_stats)\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m#correlation\u001b[39;00m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'merged' is not defined"
     ]
    }
   ],
   "source": [
    "#Descrptive stats\n",
    "\n",
    "desc_stats=merged.describe()\n",
    "print(desc_stats)\n",
    "\n",
    "#correlation\n",
    "\n",
    "correlation=merged.corr()\n",
    "print(correlation)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8dea3f25-c0d7-4731-a822-4343ca660ba1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
